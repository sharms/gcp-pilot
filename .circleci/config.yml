version: 2
jobs:
  plan_terraform:
    docker:
      - image: hashicorp/terraform:0.11.8
    steps:
      - checkout
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Initialize Terraform
          command: cd terraform && terraform init && terraform plan -input=false
  apply_terraform:
    docker:
      - image: hashicorp/terraform:0.11.8
    steps:
      - checkout
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Apply Terraform
          command: cd terraform && terraform init && terraform apply -input=false -auto-approve
  deploy_java_spring_flexible:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "java-spring-flexible/pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Setup app.yaml
          command: |
            cd java-spring-flexible
            sed -i "s/__MYSQL_USER_NAME__/${MYSQL_USER_NAME}/g" src/main/appengine/app.yaml
            sed -i "s/__MYSQL_USER_PASSWORD__/${MYSQL_USER_PASSWORD}/g" src/main/appengine/app.yaml
            sed -i "s/__DATABASE_NAME__/${DATABASE_NAME}/g" src/main/appengine/app.yaml
            sed -i "s/__INSTANCE_CONNECTION_NAME__/${INSTANCE_CONNECTION_NAME}/g" src/main/appengine/app.yaml
      - run: cd java-spring-flexible && mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "java-spring-flexible/pom.xml" }}
      - run: cd java-spring-flexible && mvn appengine:deploy
  deploy_wordpress_flexible:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Deploy Wordpress
          command: |
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            cd wordpress
            sed -i "s/WORDPRESS_DB_NAME/${WORDPRESS_DB_NAME}/g" wp-config.php
            sed -i "s/WORDPRESS_DB_HOST/${WORDPRESS_DB_HOST}/g" wp-config.php
            sed -i "s/WORDPRESS_DB_USER/${WORDPRESS_DB_USER}/g" wp-config.php
            sed -i "s/WORDPRESS_DB_PASSWORD/${WORDPRESS_DB_PASSWORD}/g" wp-config.php
            sed -i "s/WORDPRESS_AUTH_KEY/${WORDPRESS_AUTH_KEY}/g" wp-config.php
            sed -i "s/WORDPRESS_SECURE_AUTH_KEY/${WORDPRESS_SECURE_AUTH_KEY}/g" wp-config.php
            sed -i "s/WORDPRESS_LOGGED_IN_KEY/${WORDPRESS_LOGGED_IN_KEY}/g" wp-config.php
            sed -i "s/WORDPRESS_NONCE_KEY/${WORDPRESS_NONCE_KEY}/g" wp-config.php
            sed -i "s/WORDPRESS_AUTH_SALT/${WORDPRESS_AUTH_SALT}/g" wp-config.php
            sed -i "s/WORDPRESS_SECURE_AUTH_SALT/${WORDPRESS_SECURE_AUTH_SALT}/g" wp-config.php
            sed -i "s/WORDPRESS_LOGGED_IN_SALT/${WORDPRESS_LOGGED_IN_SALT}/g" wp-config.php
            sed -i "s/WORDPRESS_NONCE_SALT/${WORDPRESS_NONCE_SALT}/g" wp-config.php
            gcloud app deploy

workflows:
  version: 2
  terraform:
    jobs:
      - plan_terraform
      - hold:
          type: approval
          requires:
            - plan_terraform
      - apply_terraform:
          requires:
            - hold
      - deploy_java_spring_flexible
      - deploy_wordpress_flexible

